UNIVERSITY NODE

Frontend:
Ho pensato di dividere il frontend in 3 parti, esso servirà al fine di simulare una vera e propria interazione con tutto il sistema

1. Link con lista Università
    - una semplice pagina web con il link per accedere ad atterrare sulla pagina dell'università.
2. Pagina dell'università
    - una pagina dove ci sarà una lista di materie, dopo aver scelto la materia atterro sul chatbot
3. Chatbot
    - un semplice chatbot (da vedere se fare integrazione con servizion NPL Api Esterno per un test più simile alla realtà)
    - alla prima domanda il chatbot dovrà rispondere utilizzando le API interne dell'università newchat e question
    - Apparirà un pulsante per rigenerare la risposta
        - nel caso di click del pulsante di rigenerazione della risposta,
          verra chiamata l'API regenerate_question che si occuperà di chiamare il sistema Boulez
          e geberare 1 o più risposte
    - Apparirà un pulsante per dare rating alla risposta (1)
        - verrà chiamatà l'API interna feedback che a sua voltà inoltrerà la richiesta a Boulez

Backend API:
chatbot:
- newchat | GET | chatbot/chat/new
    Input: university_id
    Output: {status, chat_id}
    Description: Inizializza una nuova chat, restituisce Id della Chat creata.
- question | POST | chatbot/chat/question
    Input: chat_id, prompt
    Output: [{response_id, response, accouracy}]
    Description: Api che data una domanda restituisce una risposta
- regenerate_question | POST | chatbot/chat/regenerate_question
    Input: chat_id, question_id
    Output: [{response_id, response, accuracy}]
    Description: Api che inoltra la domanda effettuata in precedenza al sistema Boulez e restituisce la/le risposte
- feedback | POST | chatbot/chat/feedback
    Input: question_id, rating
    Output: {status}
    Description: Api che inoltra il feedback al sistema Boulez

Boulez Node API:
- POST | boulez/GetCompletion
    Input: id, prompt, timestamp
    Output: {id, completion, accuracy, timestamp}
    Description: Api che inoltra il feedback al sistema Boulez

(1)
-Il rating ad una risposta l'utente può darlo solo in caso di risposta data da BOULEZ,
o anche in caso di risposta data dall'uni, e in questo caso, ignoriamo totalmente l'azione?
Es. utente fa domanda al chatbot dell'università, legge la risposta e gli da un rating alto, noi di questa
info non ce ne facciamo nulla giusto? anche perchè non passando da boulez non abbiamo nessun identificativo
che potremmo usare per tracciare l'autenticità del dato
-In caso di più risposte, l'utente potrà inviare feedback su tutte le risposte o solo su 1?

domanda
1. Ma se un'università chiama boulez per una risposta,
Boulez stesso chiamerà tramite API l'università da dove arriva la domanda?

BOULEZ NODE
Le API da creare sono presenti nel PDF API.pdf

Boulez API:
- GetCompletion | POST | api/GetCompletion
    Input: id, prompt, timestamp
    Output: {id, completion, accuracy, timestamp}
    Description: Api chiamata dalle università che restituisce 1 o più risposte in base alla domanda fornita

Boulez Orchestrator:
Modulo che si occupa dell'invio in contemporanea, a tutte le unversità collegate a Boulez, della domanda fornita
nell'api GetCompletion entro un certo limite di tempo.

Boulez Storage Component (DB):

Universities | Document
- Lista di tutte le università collegate al sistema, informazioni legate all'università,
{
id: identificativo dell'università nel sistema boulez,
name: nome unversità,
headquarter: indirizzo della sede centrale,
api_link: link che punta all'API Boulez implementata internamente dall'università es. https://uni.it/boulez (1),
enabled: flag per abilitare/disabilitare un università
}

Questions | Document
- Lista di tutte le domande effettuate tramite API
{
id: identificativo,
prompt: domanda,
from: università di partenza (da vedere se aggiungere il campo),
timestamp
}

Answers | Document
- Lista di tutte le risposte effettuate dai sistemi a valle
{
id: identificativo,
university_id: id università a cui è stata fatta la chiamata,
question_id: id_domanda di partenza,
completion: risposta,
accuracy: accuratezza della risposta,
timestamp
}


(2)
da decidere se salvare o meno interamente tutto il link incluso il nome dell'endpoint che attualmente è unico.
quin se salvare https://uni.it/boulez o https://uni.it/boulez/GetCompletion
Non salvare il nome finale dell'endpoint porterebbe ad una maggiore portabilità del progetto
in caso in futuri aggiornamenti il sistema Boulez potrebbe richiedere l'aggiunta di nodi api che i sistemi
a valle devono implementare. Salvando solo il percorso fino alla "cartella" dove le chiamate di boulez verranno effettuate
permette al sistema stesso di aggiungere alla fine del link l'endpoint che l'università avrà implementato.
in caso si decide di implementare questa soluzione, bisognerà controllare che appunto la stringa salvata a db
non abbia nel suo contenuto un nome di una API.


Domande
1. Nel paper c'è scritto, nel paragrafo III. The Boulez System, periodic requests that Boulez makes to individual nodes
Quindi ci sono delle chiamate che fa Boulez sistematicamente ogni tot ai sistemi a valle (le univesità), che tipo
di chiamate sono?
2. Modulo trust, come salviamo i dati? con un documento (tabella) a parte che tiene traccia di ogni feedback?
o magari assegnando un punteggio trust base=0 ad ogni università, l'API di feedback va ad aggiornare questo valore
in base alla risposta quindi aggiungendo +1, 0, -1 al valore (assicurandoci comunque che ogni domanda possa inviare feedback 1 volta sola)
2. Non ho individuato nel paper, come il modulo Trust influenzi l'orchestratore.
Avendo un punteggio di trust assegnato ad ogni università, come fa questo punteggio a influire sulla risposta che poi
il sistema andrà a dare in risposta alla GetCompletion API?
Per come la sto pensando, potrebbe essere l'aggiunta tot punti alla accuracy dipendentemente dal punteggio di Trust.
Es.
punteggio di trust da 0 a 10 -> aggiungo 0.05 punti nella accuracy della risposta
punteggio di trust da 10 a 50 -> aggiungo 0.1 punti nella accuracy della risposta
e cosi via, o comunque un sistema ibrido
3. implementare un servizio di Basic Auth con token, ossia l'università prima di chiamare
un endpoint di boulez, chiama un servizio che in base a delle credenziali (create appositamente per l'università)
che gli restituisce un token (con una certa durata) che poi permette di chiamare tutti gli altri nodi API?
Questo faciliterebbe il tracciamento dell'università tipo ad esempio se vogliamo registrare il parametro
from nel Document Questions, perchè appunto ogni token è collegato ad un'università.
Al momento questa cosa è inutile, ma sicuramente porta innanzi tutto un minimo di sicurezza all'applicativo e in più
potrebbe servire per futuri sviluppi.


io mi soffermerei inizialmente nel creare il nodo delle univeristà, cosi da avere una base solida dove poi
testare le API di Boulez.

---

salve prof.
ho fatto un piccolo documento che spiega un po il funzionamento tecnico del progetto.
sicuramente ora siamo ad una versione primordiale, ma col tempo possiamo andare ad aggiornare questo documento.

...domande

3!=6

Sezione Feedback:
Prima dell'invio della risposta al chiamante, Boulez dovrà passare le risposte ricevute in un altro modulo che si occupa di selezionare la/le risposte.
Questo modulo sarà chiamato ogni tot. tempo (a cron magari) e prenderà in input tutti i feedback che non sono stati elaborati, e li convertirà ad in una percentuale.
Per implementare un algoritmo per testare questo modulo, questa percentuale potrebbe essere:

RatingGenerale = somma tra i rating (quindi i +1 e i -1)
Percentuale =  1 + (RatingGenerale /100)

Esempio negativo, univ. con rating generale basso ad esempio -4, la percentuale sarà 1 - 0.04 = 0.06
e quindi l'accuracy di una risposta dell'università es. 0.85 diventerà: 0.85 * 0.06 = 0.79

Esempio Positivo, univ. con rating generale alto ad esempio +4, la percentuale sarà 1 + 0.04 = 1.04
e quindi l'accuracy di una risposta dell'università es. 0.85 diventerà: 0.85 * 1.04 = 0.88

Quindi infine, Boulez dopo aver raccolto tutte le risposte dalle varie università andrà solo a moltiplicare il dato accuracy ricevuto con questa percentuale precalcolata da questo modulo.
La risposta a valle sarà data ovviamente dall'accuracy più alta calcolata .
Lato applicativo, per non ricalcolare ad ogni elaborazione di questo modulo tutte le risposte per avere questo RatingGenerale, salviamo a db, per ogni università,
sia il RatingGenerale calcolato in precedenza sia l'accuracy calcolata.
In un secondo run ovviamente al rating generale non saranno calcolati già i feedback elaborati, ma saranno aggiunti solo quelli nuovi, invece la percentuale verrà ricalcolata.


Sezione Materia:
Costruisco un API esposta a tutti che avrà i dati di ogni materia: id, nome materia. (al momento bastano)
Le università devono mappare gli id delle materie date da boulez, con gli id delle proprie materie,
In quanto ad una chiamata GetCompletion bisognerà anche passare questo id materia, così da dare informazioni ai sistemi a valle della materia specifica su cui costruire la risposta.
In più, ogni università potrà dovrà inserire una lista di materie in base a cui essere chiamata per dare una risposta.
Ad Esempio, l'università Pegaso, magari non avendo corsi o materie inerenti a medicina, non si iscriverà ad ricevere da Boulez domande inerenti a queste materie,
così che Boulez possa chiamare le sole università che siano iscritte alla materia e quindi che abbiamo possibilità di dare la risposta.

Problemi:
Lista Materie: al momento ci sono sono delle materie "Generali", quindi non sono collegate ad un corso di studi,
questo significa che si potrebbe interrogare Boulez per una materia presente in piu corsi di studio

Fare lista di API VISIBILI DALL'ESERNO
con/senza auth